// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: shortLink.proto

package shortlinkservice

import (
	"context"

	"shortLink/rpc/pb/shortLink"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ConvertRequest  = shortLink.ConvertRequest
	ConvertResponse = shortLink.ConvertResponse
	SearchRequest   = shortLink.SearchRequest
	SearchResponse  = shortLink.SearchResponse

	ShortLinkService interface {
		Convert(ctx context.Context, in *ConvertRequest, opts ...grpc.CallOption) (*ConvertResponse, error)
		Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	}

	defaultShortLinkService struct {
		cli zrpc.Client
	}
)

func NewShortLinkService(cli zrpc.Client) ShortLinkService {
	return &defaultShortLinkService{
		cli: cli,
	}
}

func (m *defaultShortLinkService) Convert(ctx context.Context, in *ConvertRequest, opts ...grpc.CallOption) (*ConvertResponse, error) {
	client := shortLink.NewShortLinkServiceClient(m.cli.Conn())
	return client.Convert(ctx, in, opts...)
}

func (m *defaultShortLinkService) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	client := shortLink.NewShortLinkServiceClient(m.cli.Conn())
	return client.Search(ctx, in, opts...)
}
